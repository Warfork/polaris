[script]
n0=menu @XDCC {
n1=  dclick:{
n2=    if ($sline(@XDCC,1) != $null) {
n3=      clear @XDCC
n4=      aline -p @XDCC Filename: $r.xdcc.pack($sline(@XDCC,1).ln,Filename)
n5=      aline -p @XDCC Desc: $r.xdcc.pack($sline(@XDCC,1).ln,Desc)
n6=      aline -p @XDCC Size: $size($file($r.xdcc.pack($sline(@XDCC,1).ln,Filename)).size)
n7=      aline -p @XDCC Downloads: $r.xdcc.pack($sline(@XDCC,1).ln,DL)
n8=    }
n9=  }
n10=  View:{
n11=    if ($sline(@XDCC,1) != $null) {
n12=      clear @XDCC
n13=      aline -p @XDCC Filename: $r.xdcc.pack($sline(@XDCC,1).ln,Filename)
n14=      aline -p @XDCC Desc: $r.xdcc.pack($sline(@XDCC,1).ln,Desc)
n15=      aline -p @XDCC Size: $size($file($r.xdcc.pack($sline(@XDCC,1).ln,Filename)).size)
n16=      aline -p @XDCC Downloads: $r.xdcc.pack($sline(@XDCC,1).ln,DL)
n17=    }
n18=  }
n19=  -
n20=  New Packs:{
n21=    set %~xdcc-p $$?="Enter number of packs. $crlf $+ Example: 5"
n22=    w.set XDCC Snagged 0
n23=    w.set XDCC Record.CPS n/a
n24=    write -c Docs\XDCC.ini
n25=    titlebar @XDCC - XDCC Pack Editor
n26=    clear @XDCC
n27=    clear -l @XDCC
n28=    set %~xdcc-c 0
n29=    :start
n30=    inc %~xdcc-c 1
n31=    if (%~xdcc-c > %~xdcc-p) { unset %~xdcc-c %~xdcc-p | return }
n32=    else {
n33=      w.xdcc.pack %~xdcc-c Filename $$dir="Choose Pack $chr(35) $+ [ %~xdcc-c ] "
n34=      w.xdcc.pack %~xdcc-c Desc $$?="Enter Desc for Pack $chr(35) $+ [ %~xdcc-c ] $crlf $+ >> [ $nopath($r.xdcc.pack(%~xdcc-c,Filename)) ] "
n35=      w.xdcc.pack %~xdcc-c DL 0
n36=      aline -l @XDCC Pack $chr(35) $+ [ %~xdcc-c ]
n37=      clear @XDCC
n38=      aline -p @XDCC Filename: $r.xdcc.pack(%~xdcc-c,Filename)
n39=      aline -p @XDCC Desc: $r.xdcc.pack(%~xdcc-c,Desc)
n40=      aline -p @XDCC Size: $size($file($r.xdcc.pack(%~xdcc-c,Filename)).size)
n41=      aline -p @XDCC Downloads: 0
n42=      goto start
n43=    }
n44=  }
n45=  Edit Pack:{
n46=    if ($sline(@XDCC,1) != $null) {
n47=      w.xdcc.pack $sline(@XDCC,1).ln Filename $$dir="Choose Pack $chr(35) $+ [ $sline(@XDCC,1).ln ] " $r.xdcc.pack($sline(@XDCC,1).ln,Filename)
n48=      w.xdcc.pack $sline(@XDCC,1).ln Desc $$?="Enter Desc for Pack $chr(35) $+ [ $sline(@XDCC,1).ln ] $crlf $+ >> [ $nopath($r.xdcc.pack($sline(@XDCC,1).ln,Filename)) ] "
n49=      w.xdcc.pack $sline(@XDCC,1).ln DL 0
n50=      clear @XDCC
n51=      aline -p @XDCC Filename: $r.xdcc.pack($sline(@XDCC,1).ln,Filename)
n52=      aline -p @XDCC Desc: $r.xdcc.pack($sline(@XDCC,1).ln,Desc)
n53=      aline -p @XDCC Size: $size($file($r.xdcc.pack($sline(@XDCC,1).ln,Filename)).size)
n54=      aline -p @XDCC Downloads: 0
n55=    }
n56=  }
n57=  -
n58=  Add Pack:{
n59=    w.xdcc.pack $calc( [ $xdcc.packs ] + 1) Filename $$dir="Choose Pack $chr(35) $+ [ $calc( [ $xdcc.packs ] + 1) ] "
n60=    w.xdcc.pack $calc( [ $xdcc.packs ] + 1) Desc $$?="Enter Desc for Pack $chr(35) $+ [ $calc( [ $xdcc.packs ] + 1) ] $crlf $+ >> [ $nopath($r.xdcc.pack($calc( [ $xdcc.packs ] + 1),Filename)) ] "
n61=    w.xdcc.pack $calc( [ $xdcc.packs ] + 1) DL 0
n62=    clear @XDCC
n63=    aline -l @xdcc Pack $chr(35) $+ $xdcc.packs
n64=    aline -p @XDCC Filename: $r.xdcc.pack($xdcc.packs,Filename)
n65=    aline -p @XDCC Desc: $r.xdcc.pack($xdcc.packs,Desc)
n66=    aline -p @XDCC Size: $size($file($r.xdcc.pack($xdcc.packs,Filename)).size)
n67=    aline -p @XDCC Downloads: $r.xdcc.pack($xdcc.packs,DL)
n68=  }
n69=  Del Pack:{
n70=    if ($sline(@XDCC,1) != $null) && ($r.xdcc.pack($sline(@XDCC,1).ln,DL) != $null) {
n71=      set %~xdcc-c $sline(@XDCC,1).ln
n72=      :start-del
n73=      inc %~xdcc-c 1
n74=      if ($r.xdcc.pack(%~xdcc-c,DL) == $null) {
n75=        d.xdcc.pack $calc(%~xdcc-c - 1)
n76=        clear @XDCC
n77=        clear -l @XDCC
n78=        set %~xdcc-c 0
n79=        :start-list
n80=        inc %~xdcc-c 1
n81=        if ($r.xdcc.pack(%~xdcc-c,DL) == $null) { unset %~xdcc-c }
n82=        else { aline -l @XDCC Pack $chr(35) $+ %~xdcc-c | goto start-list }
n83=      } 
n84=      else {
n85=        w.xdcc.pack $calc(%~xdcc-c - 1) Filename $r.xdcc.pack(%~xdcc-c,Filename)
n86=        w.xdcc.pack $calc(%~xdcc-c - 1) Desc $r.xdcc.pack(%~xdcc-c,Desc)
n87=        w.xdcc.pack $calc(%~xdcc-c - 1) DL $r.xdcc.pack(%~xdcc-c,DL)
n88=        goto start-del
n89=      }
n90=    }
n91=  }
n92=  -
n93=  Close:window -c @XDCC
n94=}
n95=menu @Pager {
n96=  dclick {
n97=    if ($sline(@Pager,1) != $null) {
n98=      clear @Pager
n99=      aline @Pager Time: $r.pager($sline(@Pager,1).ln,Time)
n100=      aline -p @Pager Message: $r.pager($sline(@Pager,1).ln,Message)
n101=    }
n102=  }
n103=  Read Page:{
n104=    if ($sline(@Pager,1) != $null) {
n105=      clear @Pager
n106=      aline @Pager Time: $r.pager($sline(@Pager,1).ln,Time)
n107=      aline -p @Pager Message: $r.pager($sline(@Pager,1).ln,Message)
n108=    }
n109=  }
n110=  Del Page:{
n111=    if ($sline(@Pager,1) != $null) && ($r.pager($sline(@Pager,1).ln,Message) != $null) {
n112=      set %~page-c $sline(@Pager,1).ln
n113=      :start-del
n114=      inc %~page-c 1
n115=      if ($r.pager(%~page-c,Message) == $null) {
n116=        d.pager $calc(%~page-c - 1)
n117=        clear @Pager
n118=        clear -l @Pager
n119=        set %~page-c 0
n120=        :start-list
n121=        inc %~page-c 1
n122=        if ($r.pager(%~page-c,Message) == $null) { unset %~page-c }
n123=        else { aline -l @Pager $r.pager(%~page-c,Nick) | goto start-list }
n124=      } 
n125=      else {
n126=        w.pager $calc(%~page-c - 1) Nick $r.pager(%~page-c,Nick)
n127=        w.pager $calc(%~page-c - 1) Time $r.pager(%~page-c,Time)
n128=        w.pager $calc(%~page-c - 1) Message $r.pager(%~page-c,Message)
n129=        goto start-del
n130=      }
n131=    }
n132=  }
n133=  -
n134=  Clear All:{
n135=    if ($$?!="Do you really want to Clear every Page?" == $true) {
n136=      write -c $mircdirDocs\Pager.ini
n137=      clear -l @Pager
n138=      clear @Pager
n139=    }
n140=  }
n141=}
n142=menu @Ports {
n143=  dclick:{
n144=    if ($strip($gettok($sline(@Ports,1),1,32),burc) == Fastest) {
n145=      if ($strip($gettok($sline(@Ports,1),3,32),burc) != $port) { server $server $strip($gettok($sline(@Ports,1),3,32),burc) | window -c @Ports } | halt
n146=    }
n147=    if ($strip($gettok($sline(@Ports,1),2,32),burc) !isnum) || ($strip($gettok($sline(@Ports,1),2,32),burc) == $port) { halt }
n148=    server $server $strip($gettok($sline(@Ports,1),2,32),burc) | window -c @Ports
n149=  }
n150=  Refresh Ports:port
n151=  -
n152=  Connect to Selected port:{
n153=    if ($strip($gettok($sline(@Ports,1),1,32),burc) == Fastest) {
n154=      if ($strip($gettok($sline(@Ports,1),3,32),burc) != $port) { server $server $strip($gettok($sline(@Ports,1),3,32),burc) | window -c @Ports } | halt
n155=    }
n156=    if ($strip($gettok($sline(@Ports,1),2,32),burc) !isnum) || ($strip($gettok($sline(@Ports,1),2,32),burc) == $port) { halt }
n157=    server $server $strip($gettok($sline(@Ports,1),2,32),burc) | window -c @Ports
n158=  }
n159=  Connect to Fastest port:if ($strip($gettok($line(@ports,$line(@ports,0)),2,32),burc) != $port) { server $server $strip($gettok($line(@ports,$line(@ports,0)),2,32),burc) | window -c @Ports }
n160=  -
n161=  Close window:window -c @Ports
n162=}
n163=Menu @SNotice {
n164=  $iif($r.set(SNotice.Window,Default) == $null || $r.set(SNotice.Window,Default) == Global,$on,$off) Global:{ w.set SNotice.Window Default Global | titlebar @SNotice - Default Action: $r.set(SNotice.Window,Default) }
n165=  $iif($r.set(SNotice.Window,Default) == ChatOps,$on,$off) ChatOps:{ w.set SNotice.Window Default ChatOps | titlebar @SNotice - Default Action: $r.set(SNotice.Window,Default) }
n166=  $iif($r.set(SNotice.Window,Default) == LocOps,$on,$off) LocOps:{ w.set SNotice.Window Default LocOps | titlebar @SNotice - Default Action: $r.set(SNotice.Window,Default) }
n167=  $iif($r.set(SNotice.Window,Default) == HelpOp,$on,$off) HelpOp:{ w.set SNotice.Window Default HelpOp | titlebar @SNotice - Default Action: $r.set(SNotice.Window,Default) }
n168=}
n169=Menu @Polaris {
n170=  dclick:run $r.info(WebPage)
n171=  Help:help
n172=  Goto WebPage:run $r.info(WebPage)
n173=  Email $r.info(Author):run mailto: $+ $r.info(Email)
n174=  -
n175=  Close:window -c @Polaris
n176=}
n177=Menu @Logs {
n178=  dclick:if ($isfile($gettok($window(@Logs).title,2,32)) == $true) { run Notepad $gettok($window(@Logs).title,2,32) }
n179=  Run Notepad:if ($isfile($gettok($window(@Logs).title,2,32)) == $true) { run Notepad $gettok($window(@Logs).title,2,32) }
n180=  -
n181=  Delete Log:if (($isfile($gettok($window(@Logs).title,2,32)) == $true) && ($$?!="Do you want to delete this log?" == $true)) { .remove $gettok($window(@Logs).title,2,32) | clear @Logs | aline @Logs $c(1) $+ $nopath($gettok($window(@Logs).title,2,32)) has been removed. | titlebar @Logs - $logdir*.log | unset $gettok($window(@Logs).title,2,32) }
n182=  -
n183=  Refresh Log:{
n184=    if ($isfile($gettok($window(@Logs).title,2,32)) == $true) { 
n185=      titlebar @Logs - $gettok($window(@Logs).title,2,32) | clear @Logs
n186=      aline @Logs $c(1) $+ Name: $nopath($gettok($window(@Logs).title,2,32))
n187=      aline @Logs $c(1) $+ Size: $size($file($gettok($window(@Logs).title,2,32)).size)
n188=      aline @Logs $c(1) $+ Lines: $lines($gettok($window(@Logs).title,2,32))
n189=      aline @Logs $c(1) $+  
n190=      loadbuf -p @Logs $gettok($window(@Logs).title,2,32)
n191=      aline @Logs  
n192=      aline @Logs $c(1) $+ *** End of File.
n193=      sline @Logs 4 | halt
n194=    }
n195=  }
n196=  View List:{
n197=    set $gettok($window(@Logs).title,2,32) $$file="Choose Log to View" $logdir*.log
n198=    titlebar @Logs - $gettok($window(@Logs).title,2,32) | clear @Logs
n199=    aline @Logs $c(1) $+ Name: $nopath($gettok($window(@Logs).title,2,32))
n200=    aline @Logs $c(1) $+ Size: $size($file($gettok($window(@Logs).title,2,32)).size)
n201=    aline @Logs $c(1) $+ Lines: $lines($gettok($window(@Logs).title,2,32))
n202=    aline @Logs $c(1) $+  
n203=    loadbuf -p @Logs $gettok($window(@Logs).title,2,32)
n204=    aline @Logs  
n205=    aline @Logs $c(1) $+ *** End of File.
n206=    sline @Logs 4 | halt
n207=  }
n208=  -
n209=  Close Viewer:window -c @Logs
n210=}
