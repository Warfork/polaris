[script]
n0=ctcp *:*:*:{
n1=  if ($1 == DCC) && ($2 == Send) { aecho $nick $bracket($address) is trying to send you $c(2) $+ $3 $+ $bracket($size($6)) on port $c(2) $+ $5 $+ $c(1) $+ . }
n2=  if ($1 == DCC) && ($2 == Chat) { aecho $nick $bracket($address) is trying to chat with you on port $c(2) $+ $5 $+ $c(1) $+ . $bracket($iif((($away == $true) && ($r.set(Away,Reject.Chat) == On)),Rejected for Being Away)) }
n3=  if ($istok($remove($level($mask($fulladdress,3)),$chr(61)),40,44) == $true) {
n4=    if ($chan != $null) { if ($me isop $chan) { mode $chan -o+bb $nick $wildsite $mask($fulladdress,3) | kick $chan $nick $isset($r.shit($mask($fulladdress,3)),No Reason Specified) (Shitlisted) | aecho $nick $bracket($address) is going to be removed from $c(2) $+ $chan $+ $c(1) $+ . $bracket(Shitlisted) } | goto end }
n5=    else { .msg $nick You were shitlisted, you've just been added to my ignore list! $~($logo) | close -m $nick | .ignore -pntiu60 $wildsite | aecho $nick $bracket($address) has been put on ignore. $bracket(Shitlisted) | goto end }
n6=  }
n7=  if (($r.set(Personal.Flood.Protection,CTCP) == On) && ($isnum($r.set(Personal.Flood.Protection,CTCP.Lines)) == $true) && ($isnum($r.set(Personal.Flood.Protection,CTCP.Interval)) == $true) && ($isnum($r.set(Personal.Flood.Protection,Ignore.Time)) == $true) && ($gnick($nick) == $true) && ($nick != $me) && ($host != $site)) {
n8=    inc %~pflood-ctcp. [ $+ [ $replace($site,*,_,?,_) ] ] 1
n9=    if (%~pflood-ctcp. [ $+ [ $replace($site,*,_,?,_) ] ] >= $r.set(Personal.Flood.Protection,CTCP.Lines)) {
n10=      close -m $nick | .ignore -pntiu [ $+ [ $r.set(Personal.Flood.Protection,Ignore.Time) ] ] $wildsite
n11=      .notice $nick $c(1) $+ CTCP flood detected, protection enabled. $bracket($r.set(Personal.Flood.Protection,CTCP.Lines),lines within,$r.set(Personal.Flood.Protection,CTCP.Interval),second interval per line) $~($logo)
n12=      aecho $nick $bracket($address) was put on ignore for $r.set(Personal.Flood.Protection,Ignore.Time) seconds for CTCP flooding you.  To unignore $nick press $c(2) $+ Control+F6 $+ $c(1) now! $bracket($r.set(Personal.Flood.Protection,CTCP.Lines),lines within,$r.set(Personal.Flood.Protection,CTCP.Interval),second interval per line)
n13=    }
n14=    utimer ~pflood-ctcp. [ $+ [ $replace($site,*,_,?,_) ] ] $r.set(Personal.Flood.Protection,CTCP.Interval)
n15=  }
n16=  if (%~pflood-ctcp. [ $+ [ $replace($site,*,_,?,_) ] ] < $r.set(Personal.Flood.Protection,CTCP.Lines)) || (%~pflood-ctcp. [ $+ [ $replace($site,*,_,?,_) ] ] == $null) {
n17=    if ($1 == XDCC) {
n18=      if ($istok($remove($level($mask($fulladdress,3)),$chr(61)),30,44) == $true) { .notice $nick $c(1) $+ Your access has been denied. $~($logo) | aecho $nick $bracket($address) is trying to use the XDCC. $bracket(Banned) }
n19=      elseif ($chan != $null) { .notice $nick $c(1) $+ Sorry, the XDCC doesn't respond to mass channel ctcps! $~($logo) }
n20=      elseif ($r.set(XDCC,Status) != On) { .notice $nick $c(1) $+ Sorry, the XDCC is currently down. $~($logo) }
n21=      else {
n22=        if ($2 == $null) { .notice $nick Syntax: XDCC command | .notice $nick /ctcp $me XDCC HELP for more information. | goto done }
n23=        elseif ($2 == Help) {
n24=          aecho $nick $bracket($address) is requesting XDCC help.
n25=          if ($3 == Send) { .notice $nick Syntax: Send #<Pack Number> | .notice $nick This command will initiate file transfer. }
n26=          elseif ($3 == List) { .notice $nick Syntax: List | .notice $nick The list command just lists the offered packs. }
n27=          elseif ($3 != $null) { .notice $nick Syntax: Help command | .notice $nick Send   Sends Specified Pack | .notice $nick List   Lists the offered Packs }
n28=          else { .notice $nick An XDCC is a script that enables file sharing.  It is similar to a fserve, but the only files that you can get are the ones that are offered.  For more information on a specific command, type /ctcp $me XDCC Help command | .notice $nick Send   Sends Specified Pack | .notice $nick List   Lists the offered Packs }
n29=        }
n30=        elseif ($2 == List) {
n31=          aecho $nick $bracket($address) is requesting the XDCC packet list. $iif($isnum($r.set(XDCC,Pack.List)) != $true,$bracket(Packet Listing Disabled)) $+ $iif($tc($nick,XDCC) != $true,$bracket(Rejected Request))
n32=          if ($isnum($r.set(XDCC,Pack.List)) != $true) { .notice $nick $c(1) $+ Sorry, but pack listing has been disabled. $~($logo) }
n33=          elseif ($tc($nick,XDCC) != $true) { .notice $nick $c(1) $+ Sorry, access has been denied because your not in one of the required channels. $bracket($iif($r.set(XDCC,Channels) == $null || $r.set(XDCC,Channels) == All,Every Channel I am On,$r.set(XDCC,Channels))) $~($logo) }
n34=          elseif (($calc($ctime - [ %~xdcc-ctime ] ) <= $r.set(XDCC,Pack.List)) && (%~xdcc-ctime != $null)) { .notice $nick $c(1) $+ Sorry, please wait another $lduration($calc($r.set(XDCC,Pack.List) - ($ctime - [ %~xdcc-ctime ] ))) before requesting the XDCC packets again. $~($logo) }
n35=          else { set -u [ $+ [ $calc($r.set(XDCC,Pack.List) * 2) ] ] %~xdcc-ctime $ctime | xdcc.ad.temp 1 .notice $nick }
n36=        }
n37=        elseif (($2 == Send) || ($2 == Get)) {
n38=          aecho $nick $bracket($address) is requesting an XDCC packet. $iif($tc($nick,XDCC) != $true,$bracket(Rejected Request),$iif($3 == $null,$bracket(n/a),$bracket($3)))
n39=          if ($tc($nick,XDCC) != $true) { .notice $nick $c(1) $+ Sorry, access has been denied because your not in one of the required channels. $bracket($iif($r.set(XDCC,Channels) == $null || $r.set(XDCC,Channels) == All,Every Channel I am On,$r.set(XDCC,Channels))) $~($logo) }
n40=          else {
n41=            if ($3 == $null) { .notice $nick Syntax: Send #<Pack Number> }
n42=            elseif ($r.xdcc.pack($remove($3,$chr(35)),DL) == $null) { .notice $nick $c(1) $+ Invalid Pack Number }
n43=            elseif ($send(0) >= $r.set(XDCC,Max.Sends.Total)) {
n44=              if ($queue(0) >= $r.set(XDCC,Max.Queues.Total)) { .notice $nick $c(1) $+ Sorry, there are too many send in progress right now and all the queue slots are in use. }
n45=              elseif ($queue.nick($nick) >= $r.set(XDCC,Max.Queues.Each)) { .notice $nick $c(1) $+ Sorry, there are too many sends in progress right now and you have used all your queue slots.  If you still want to get a file please wait for one to finish and try again. | goto done }
n46=              else {
n47=                queue.add XDCC $nick $r.xdcc.pack($remove($3,$chr(35)),Filename)
n48=                if ($result isnum) { .notice $nick $c(1) $+ Sorry, that queue already exists in queue slot $chr(35) $+ $result $+ , try and get another file next time. }
n49=                else { .notice $nick $c(1) $+ Queuing $+ $c(2) $r.xdcc.pack($remove($3,$chr(35)),Desc) $+ $c(1) ( $+ $size($file($r.xdcc.pack($remove($3,$chr(35)),Filename)).size) $+ ).  It has been placed in queue slot $chr(35) $+ $queue(0) $+ , it will send when sends are available. }
n50=              }
n51=            }
n52=            elseif ($send.nick($nick) >= $r.set(XDCC,Max.Sends.Each)) {
n53=              if ($queue(0) >= $r.set(XDCC,Max.Queues.Total)) { .notice $nick $c(1) $+ Sorry, you have too many transfers right now and all the queue slots are in use. }
n54=              elseif ($queue.nick($nick) >= $r.set(XDCC,Max.Queues.Each)) { .notice $nick $c(1) $+ Sorry, you have too many transfers right now and you have used all your queue slots.  If you still want to get a file please wait for one to finish and try again. }
n55=              else {
n56=                queue.add XDCC $nick $r.xdcc.pack($remove($3,$chr(35)),Filename)
n57=                if ($result isnum) { .notice $nick $c(1) $+ Sorry, that queue already exists in queue slot $chr(35) $+ $result $+ , try and get another file next time. }
n58=                else { .notice $nick $c(1) $+ Queuing $+ $c(2) $r.xdcc.pack($remove($3,$chr(35)),Desc) $+ $c(1) ( $+ $size($file($r.xdcc.pack($remove($3,$chr(35)),Filename)).size) $+ ).  It has been placed in queue slot $chr(35) $+ $queue(0) $+ , it will send when sends are available. }
n59=              }
n60=            }
n61=            else { .dcc send $nick " $+ [ $r.xdcc.pack($remove($3,$chr(35)),Filename) ] $+ " | .notice $nick $c(1) $+ Sending $c(2) $+ $r.xdcc.pack($remove($3,$chr(35)),Desc) $+ $c(1) ( $+ $size($file($r.xdcc.pack($remove($3,$chr(35)),Filename)).size) $+ ).  This file has been downloaded $c(2) $+ $r.xdcc.pack($remove($3,$chr(35)),DL) $+ $c(1) time(s). }
n62=          }
n63=        }
n64=        else { .notice $nick Unrecognized command $2 $+ .  Type "/ctcp $me XDCC Help" for help. }
n65=      }
n66=    }
n67=    if ($1 == PAGE) {
n68=      if ($chan != $null) { .notice $nick Sorry, this pager doesn't respond to mass channel ctcps! $~($logo) }
n69=      elseif ($away != $true) { .notice $nick $c(1) $+ Sorry, my pager is currently off, try and page me when I leave. $~($logo) }
n70=      elseif ($r.set(Away,Pager) != On) { .notice $nick $c(1) $+ Sorry, my pager is currently off. $~($logo) }
n71=      else {
n72=        set %~page-c 0
n73=        :start-chk
n74=        inc %~page-c 1
n75=        if ($r.pager(%~page-c,Message) == $null) {
n76=          w.pager %~page-c Nick $replace($replace($nick,[,_),],_)
n77=          w.pager %~page-c Time $atime on $date(dddd) $+ , $date(mmmm doo) $+ , $date(yyyy)
n78=          w.pager %~page-c Message $iif($2 == $null,<none>,$2-)
n79=          if ($window(@Pager) == $null) { window -kal15 @Pager $r.winpos(@Pager) @Pager }
n80=          titlebar @Pager - Double click on a nick to read the message.
n81=          clear -l @Pager
n82=          clear @Pager
n83=          set %~page-c 0
n84=          :start-list
n85=          inc %~page-c 1
n86=          if ($r.pager(%~page-c,Message) != $null) { aline -l @Pager $r.pager(%~page-c,Nick) | goto start-list }
n87=          else {
n88=            aline -ph @Pager Time: $r.pager($calc(%~page-c - 1),Time)
n89=            aline -ph @Pager Message: $r.pager($calc(%~page-c - 1),Message)
n90=            .notice $nick $c(1) $+ Thanks for the PAGE!  $~($logo)
n91=            unset %~page-c
n92=            if ($isfile($mircdirpager.wav) == $true) { .splay $mircdirpager.wav }
n93=          }
n94=        }
n95=        else { goto start-chk }
n96=      }
n97=    }
n98=    if ($1 == Version) { .ctcpreply $nick $1 $r.info(Logo) v $+ $r.info(Version) $border($r.set(Edition,$me)) for mIRC v $+ $version $bits $+ bit on Win $+ $os $addons -  $+ $r.info(WebPage) $+  }
n99=    if ($1 == ßeta) { .ctcpreply $nick $1 Does this look like ACScript go you???? }
n100=    if ($1 == Polaris) && ($nick == $r.info(Author)) { .ctcpreply $nick $1 08«07,08«04,07«05,04«01,05«08,01  I am using $r.info(Logo) v $+ $r.info(Version) $border($r.set(Edition,$me))  01,05»05,04»04,07»07,08»08» | .notice $nick 08«07,08«04,07«05,04«01,05«08,01  I am using $r.info(Logo) v $+ $r.info(Version) $border($r.set(Edition,$me))  01,05»05,04»04,07»07,08»08» }
n101=    if ($1 == Finger) { echo $colour(ctcp) -s $chr(91) $+ $nick $1 $+ $chr(93) | .ctcpreply $nick $1 $r.mirc(mirc,user) ( $+ $email $+ ) Idle: $lduration($idle) | halt }
n102=    if ($1 == Time) { echo $colour(ctcp) -s $chr(91) $+ $nick $1 $+ $chr(93) | .ctcpreply $nick $1 It is currently $atime on $date(dddd) $date(mmmm doo) $+ , $date(yyyy) $+ . ( $+ $tz $+ ) | halt }
n103=    if ($istok(XDCC PAGE PING LAG FINGER ACTION DCC RESUME SOUND GET MP3 CDCC TIME VERSION BETA POLARIS SLOTS,$1,32) != $true) { .ctcpreply $nick $left($1,50) $left($1,50) $+ ?? I'm sorry but I do not know that CTCP command. }
n104=  }
n105=  if ($1 == DCC) && ($2 == Chat) && ($away == $true) && ($r.set(Away,Reject.Chat) == On) { halt } 
n106=  if ($1 == Sound) {
n107=    if ((*.wav iswm $2-) && (($r.set(Sounds,Wave.Play) != On)) || ($away == $true)) { halt }
n108=    if ((*.mid iswm $2-) && (($r.set(Sounds,Midi.Play) != On)) || ($away == $true)) { halt }
n109=  }
n110=}
n111=on *:ctcpreply:*:{
n112=  if (($r.set(Personal.Flood.Protection,CTCP) == On) && ($isnum($r.set(Personal.Flood.Protection,CTCP.Lines)) == $true) && ($isnum($r.set(Personal.Flood.Protection,CTCP.Interval)) == $true) && ($isnum($r.set(Personal.Flood.Protection,Ignore.Time)) == $true) && ($gnick($nick) == $true) && ($nick != $me) && ($host != $site)) {
n113=    inc %~pflood-ctcp. [ $+ [ $replace($site,*,_,?,_) ] ] 1
n114=    if (%~pflood-ctcp. [ $+ [ $replace($site,*,_,?,_) ] ] >= $r.set(Personal.Flood.Protection,CTCP.Lines)) {
n115=      close -m $nick | .ignore -pntiu [ $+ [ $r.set(Personal.Flood.Protection,Ignore.Time) ] ] $wildsite
n116=      .notice $nick $c(1) $+ CTCP flood detected, protection enabled. $bracket($r.set(Personal.Flood.Protection,CTCP.Lines),lines within,$r.set(Personal.Flood.Protection,CTCP.Interval),second interval per line) $~($logo)
n117=      aecho $nick $bracket($address) was put on ignore for $r.set(Personal.Flood.Protection,Ignore.Time) seconds for CTCP flooding you.  To unignore $nick press $c(2) $+ Control+F6 $+ $c(1) now! $bracket($r.set(Personal.Flood.Protection,CTCP.Lines),lines within,$r.set(Personal.Flood.Protection,CTCP.Interval),second interval per line)
n118=    }
n119=    utimer ~pflood-ctcp. [ $+ [ $replace($site,*,_,?,_) ] ] $r.set(Personal.Flood.Protection,CTCP.Interval)
n120=  }
n121=  if ($2 isnum) && ($1 == ping) && ($ticks > $2) { set %~ping $calc(($ticks - $2) / 1000) | aecho $nick $bracket($address) had a ping reply of $c(2) $+ $lduration(%~ping) $+ $c(1) $+ ! | if ($r.set(Auto.Pinger,Status) == On) { .notice $nick Your ping reply was $lduration(%~ping) $~($logo) } | unset %~ping | halt }
n122=  else { echo $colour(ctcp) -s $chr(91) $+ $nick $upper($1) reply $+ $chr(93) $+ : $visible($2-) }
n123=  halt
n124=}
