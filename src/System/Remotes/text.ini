[script]
n0=on ^*:text:*:?:{
n1=  if ($istok($remove($level($mask($fulladdress,3)),$chr(61)),40,44) == $true) { .msg $nick You were shitlisted, you've just been added to my ignore list! $~($logo) | close -m $nick | .ignore -pntiu60 $wildsite | aecho $nick $bracket($address) has been put on ignore. $bracket(Shitlisted) }
n2=  else {
n3=    if (($r.set(Personal.Flood.Protection,Text) == On) && ($isnum($r.set(Personal.Flood.Protection,Text.Lines)) == $true) && ($isnum($r.set(Personal.Flood.Protection,Text.Interval)) == $true) && ($isnum($r.set(Personal.Flood.Protection,Ignore.Time)) == $true) && ($gnick($nick) == $true) && ($nick != $me) && ($host != $site)) {
n4=      inc %~pflood-text. [ $+ [ $replace($site,*,_,?,_) ] ] 1
n5=      if (%~pflood-text. [ $+ [ $replace($site,*,_,?,_) ] ] >= $r.set(Personal.Flood.Protection,Text.Lines)) {
n6=        close -m $nick | .ignore -pntiu [ $+ [ $r.set(Personal.Flood.Protection,Ignore.Time) ] ] $wildsite
n7=        .notice $nick $c(1) $+ Text flood detected, protection enabled. $bracket($r.set(Personal.Flood.Protection,Text.Lines),lines within,$r.set(Personal.Flood.Protection,Text.Interval),second interval per line) $~($logo)
n8=        aecho $nick $bracket($address) was put on ignore for $r.set(Personal.Flood.Protection,Ignore.Time) seconds for Text flooding you.  To unignore $nick press $c(2) $+ Control+F6 $+ $c(1) now! $bracket($r.set(Personal.Flood.Protection,Text.Lines),lines within,$r.set(Personal.Flood.Protection,Text.Interval),second interval per line)
n9=      }
n10=      utimer ~pflood-text. [ $+ [ $replace($site,*,_,?,_) ] ] $r.set(Personal.Flood.Protection,Text.Interval)
n11=    }
n12=    if (%~pflood-text. [ $+ [ $replace($site,*,_,?,_) ] ] < $r.set(Personal.Flood.Protection,Text.Lines)) || (%~pflood-text. [ $+ [ $replace($site,*,_,?,_) ] ] == $null) {
n13=      if (($r.set(Auto.ID,Status) == On) && ($nick == NickServ) && (This nick* iswm $1-)) {
n14=        if (($me == $r.set(Auto.ID,Nick.1)) && ($r.set(Auto.ID,Pass.1) != $null)) { .msg NickServ IDENTIFY $r.set(Auto.ID,Pass.1) }
n15=        elseif (($me == $r.set(Auto.ID,Nick.2)) && ($r.set(Auto.ID,Pass.2) != $null)) { .msg NickServ IDENTIFY $r.set(Auto.ID,Pass.2) }
n16=        elseif (($me == $r.set(Auto.ID,Nick.3)) && ($r.set(Auto.ID,Pass.3) != $null)) { .msg NickServ IDENTIFY $r.set(Auto.ID,Pass.3) }
n17=        elseif (($me == $r.set(Auto.ID,Nick.4)) && ($r.set(Auto.ID,Pass.4) != $null)) { .msg NickServ IDENTIFY $r.set(Auto.ID,Pass.4) }
n18=        elseif (($me == $r.set(Auto.ID,Nick.5)) && ($r.set(Auto.ID,Pass.5) != $null)) { .msg NickServ IDENTIFY $r.set(Auto.ID,Pass.5) }
n19=        elseif (($me ison $active) || ($query($active) != $null)) { editbox -ap /.msg NickServ IDENTIFY }
n20=        else { editbox -sp /.msg NickServ IDENTIFY }
n21=      }
n22=      if ($1 == XDCC) {
n23=        if ($istok($remove($level($mask($fulladdress,3)),$chr(61)),30,44) == $true) { .notice $nick $c(1) $+ Your access has been denied. $~($logo) | aecho $nick $bracket($address) is trying to use the XDCC. $bracket(Banned) }
n24=        elseif ($r.set(XDCC,Status) != On) { .msg $nick $c(1) $+ Sorry, XDCC is currently down. $~($logo) }
n25=        else {
n26=          if ($2 == $null) { .msg $nick Syntax: XDCC command | .msg $nick /msg $me XDCC HELP for more information. | goto done }
n27=          elseif ($2 == Help) {
n28=            aecho $nick $bracket($address) is requesting XDCC help.
n29=            if ($3 == Send) { .msg $nick Syntax: Send #<Pack Number> | .msg $nick This command will initiate file transfer. }
n30=            elseif ($3 == List) { .msg $nick Syntax: List | .msg $nick The list command just lists the offered packs. }
n31=            elseif ($3 != $null) { .msg $nick Syntax: Help command | .msg $nick Send   Sends Specified Pack | .msg $nick List   Lists the offered Packs }
n32=            else { .msg $nick An XDCC is a script that enables file sharing.  It is similar to a fserve, but the only files that you can get are the ones that are offered.  For more information on a specific command, type /msg $me XDCC Help command | .msg $nick Send   Sends Specified Pack | .msg $nick List   Lists the offered Packs }
n33=          }
n34=          elseif ($2 == List) {
n35=            aecho $nick $bracket($address) is requesting the XDCC packet list. $iif($isnum($r.set(XDCC,Pack.List)) != $true,$bracket(Packet Listing Disabled)) $+ $iif($tc($nick,XDCC) != $true,$bracket(Rejected Request))
n36=            if ($isnum($r.set(XDCC,Pack.List)) != $true) { .msg $nick $c(1) $+ Sorry, but pack listing has been disabled. $~($logo) }
n37=            elseif ($tc($nick,XDCC) != $true) { .msg $nick $c(1) $+ Sorry, access has been denied because your not in one of the required channels. $bracket($iif($r.set(XDCC,Channels) == $null || $r.set(XDCC,Channels) == All,Every Channel I am On,$r.set(XDCC,Channels))) $~($logo) }
n38=            elseif (($calc($ctime - [ %~xdcc-ctime ] ) <= $r.set(XDCC,Pack.List)) && (%~xdcc-ctime != $null)) { .msg $nick $c(1) $+ Sorry, please wait another $lduration($calc($r.set(XDCC,Pack.List) - ($ctime - [ %~xdcc-ctime ] ))) before requesting the XDCC packets again. $~($logo) }
n39=            else { set -u [ $+ [ $calc($r.set(XDCC,Pack.List) * 2) ] ] %~xdcc-ctime $ctime | xdcc.ad.temp 1 .msg $nick }
n40=          }
n41=          elseif (($2 == Send) || ($2 == Get)) {
n42=            aecho $nick $bracket($address) is requesting an XDCC packet. $iif($tc($nick,XDCC) != $true,$bracket(Rejected Request),$iif($3 == $null,$bracket(n/a),$bracket($3)))
n43=            if ($tc($nick,XDCC) != $true) { .msg $nick $c(1) $+ Sorry, access has been denied because your not in one of the required channels. $bracket($iif($r.set(XDCC,Channels) == $null || $r.set(XDCC,Channels) == All,Every Channel I am On,$r.set(XDCC,Channels))) $~($logo) }
n44=            else {
n45=              if ($3 == $null) { .msg $nick Syntax: Send #<Pack Number> }
n46=              elseif ($r.xdcc.pack($remove($3,$chr(35)),DL) == $null) { .msg $nick $c(1) $+ Invalid Pack Number }
n47=              elseif ($send(0) >= $r.set(XDCC,Max.Sends.Total)) {
n48=                if ($queue(0) >= $r.set(XDCC,Max.Queues.Total)) { .msg $nick $c(1) $+ Sorry, there are too many send in progress right now and all the queue slots are in use. }
n49=                elseif ($queue.nick($nick) >= $r.set(XDCC,Max.Queues.Each)) { .msg $nick $c(1) $+ Sorry, there are too many sends in progress right now and you have used all your queue slots.  If you still want to get a file please wait for one to finish and try again. | goto done }
n50=                else {
n51=                  queue.add XDCC $nick $r.xdcc.pack($remove($3,$chr(35)),Filename)
n52=                  if ($result isnum) { .msg $nick $c(1) $+ Sorry, that queue already exists in queue slot $chr(35) $+ $result $+ , try and get another file next time. }
n53=                  else { .msg $nick $c(1) $+ Queuing $+ $c(2) $r.xdcc.pack($remove($3,$chr(35)),Desc) $+ $c(1) ( $+ $size($file($r.xdcc.pack($remove($3,$chr(35)),Filename)).size) $+ ).  It has been placed in queue slot $chr(35) $+ $queue(0) $+ , it will send when sends are available. }
n54=                }
n55=              }
n56=              elseif ($send.nick($nick) >= $r.set(XDCC,Max.Sends.Each)) {
n57=                if ($queue(0) >= $r.set(XDCC,Max.Queues.Total)) { .msg $nick $c(1) $+ Sorry, you have too many transfers right now and all the queue slots are in use. }
n58=                elseif ($queue.nick($nick) >= $r.set(XDCC,Max.Queues.Each)) { .msg $nick $c(1) $+ Sorry, you have too many transfers right now and you have used all your queue slots.  If you still want to get a file please wait for one to finish and try again. }
n59=                else {
n60=                  queue.add XDCC $nick $r.xdcc.pack($remove($3,$chr(35)),Filename)
n61=                  if ($result isnum) { .msg $nick $c(1) $+ Sorry, that queue already exists in queue slot $chr(35) $+ $result $+ , try and get another file next time. }
n62=                  else { .msg $nick $c(1) $+ Queuing $+ $c(2) $r.xdcc.pack($remove($3,$chr(35)),Desc) $+ $c(1) ( $+ $size($file($r.xdcc.pack($remove($3,$chr(35)),Filename)).size) $+ ).  It has been placed in queue slot $chr(35) $+ $queue(0) $+ , it will send when sends are available. }
n63=                }
n64=              }
n65=              else { .dcc send $nick " $+ [ $r.xdcc.pack($remove($3,$chr(35)),Filename) ] $+ " | .msg $nick $c(1) $+ Sending $c(2) $+ $r.xdcc.pack($remove($3,$chr(35)),Desc) $+ $c(1) ( $+ $size($file($r.xdcc.pack($remove($3,$chr(35)),Filename)).size) $+ ).  This file has been downloaded $c(2) $+ $r.xdcc.pack($remove($3,$chr(35)),DL) $+ $c(1) time $+ $iif($r.xdcc.pack($remove($3,$chr(35)),DL) != 1,s) $+ . }
n66=            }
n67=          }
n68=          else { .msg $nick Unrecognized command $2 $+ .  Type "/msg $me XDCC Help" for help. }
n69=        }
n70=        .timer 1 0 close -m $nick
n71=      }
n72=      if (($away == $true) && ($r.set(Away,Auto.Reply) == On) && ($nick != $me) && ($gnick($nick) == $true) && ($1 != XDCC) && (%~idle. [ $+ [ $nick ] ] == $null) && ($idle > 60)) { .msg $nick $bracket(Away) $away.time $away.reason $away.pager $~($logo) | set %~idle. [ $+ [ $nick ] ] 1 | .timer 1 10 unset %~idle. [ $+ [ $nick ] ] }
n73=    }
n74=  }
n75=  if ($query($nick) != $null) && ($1- != $null) { echo $nick $ts $c(1) $+ < $+ $nick $+ $c(1) $+ > $visible($1-) }
n76=  haltdef
n77=}
n78=on ^*:text:*:#:{
n79=  if ($istok($remove($level($mask($fulladdress,3)),$chr(61)),40,44) == $true) { if ($me isop $chan) { mode $chan -o+bb $nick $wildsite $mask($fulladdress,3) | kick $chan $nick $isset($r.shit($mask($fulladdress,3)),No Reason Specified) (Shitlisted) | aecho $nick $bracket($address) is going to be removed from $c(2) $+ $chan $+ $c(1) $+ . $bracket(Shitlisted) } }
n80=  else {
n81=    if ($istok($remove($level($mask($fulladdress,3)),$chr(61)),30,44) == $true) { .notice $nick $c(1) $+ Your access has been denied. $~($logo) }
n82=    else {
n83=      if ($1- != $null) && (($r.set(Fserve,Channels) == All) || ($r.set(Fserve,Channels) == $null) || ($istok($r.set(Fserve,Channels),$chan,44) == $true)) {
n84=        if ($1- == $r.set(Fserve.1,Trigger)) || ($1- == $r.set(Fserve.2,Trigger)) || ($1- == $r.set(Fserve.3,Trigger)) || ($1- == $r.set(Fserve.4,Trigger)) || ($1- == $r.set(Fserve.5,Trigger)) {
n85=          if ($r.set(Fserve,Status) != On) { .notice $nick $c(1) $+ Sorry, The file server is currently down. }
n86=          elseif ($fserv(0) >= $r.set(Fserve,Max.Serve)) { .notice $nick $c(1) $+ Sorry, but the file server is full. }
n87=          elseif ($1- == $r.set(Fserve.1,Trigger)) && ($r.set(Fserve.1,Status) == On) { fserve.start $nick 1 }
n88=          elseif ($1- == $r.set(Fserve.2,Trigger)) && ($r.set(Fserve.2,Status) == On) { fserve.start $nick 2 }
n89=          elseif ($1- == $r.set(Fserve.3,Trigger)) && ($r.set(Fserve.3,Status) == On) { fserve.start $nick 3 }
n90=          elseif ($1- == $r.set(Fserve.4,Trigger)) && ($r.set(Fserve.4,Status) == On) { fserve.start $nick 4 }
n91=          elseif ($1- == $r.set(Fserve.5,Trigger)) && ($r.set(Fserve.5,Status) == On) { fserve.start $nick 5 }
n92=        }
n93=        if ($1 == !List) && ($r.set(Fserve,Status) == On) && ($fserve.ad.temp != $null) { .notice $nick $fserve.ad.temp }
n94=      }
n95=      if ($1- != $null) {
n96=        if ($1- == $r.set(TDCC.1,Trigger)) { tdcc.send $nick 1 }
n97=        if ($1- == $r.set(TDCC.2,Trigger)) { tdcc.send $nick 2 }
n98=        if ($1- == $r.set(TDCC.3,Trigger)) { tdcc.send $nick 3 }
n99=        if ($1- == $r.set(TDCC.4,Trigger)) { tdcc.send $nick 4 }
n100=        if ($1- == $r.set(TDCC.5,Trigger)) { tdcc.send $nick 5 }
n101=      }
n102=    }
n103=    if ((*ping?me* iswm $1-) || ($1 == !ping)) && ($r.set(Auto.Pinger,Status) == On) { .ctcp $nick ping }
n104=  }
n105=  if ($active != $chan) && ($r.set(Nick.Alert,Status) == On) {
n106=    if ($istok($replace($rpunct($1-),$rpunct($me),$me),$me,32) == $true) { aecho $chr(3) $+ $ts $c(1) $+ < $+ $iif($left($target,1) == @,@) $+ $nick $+ ( $+ $chan $+ ) $+ $c(1) $+ > $visible($1-) }
n107=    elseif (($istok($replace($rpunct($1-),$rpunct($r.set(Auto.ID,Nick.1)),$r.set(Auto.ID,Nick.1)),$r.set(Auto.ID,Nick.1),32) == $true) && ($r.set(Auto.ID,Nick.1) != n/a)) { aecho $chr(3) $+ $ts $c(1) $+ < $+ $iif($left($target,1) == @,@) $+ $nick $+ ( $+ $chan $+ ) $+ $c(1) $+ > $visible($1-) }
n108=    elseif (($istok($replace($rpunct($1-),$rpunct($r.set(Auto.ID,Nick.2)),$r.set(Auto.ID,Nick.2)),$r.set(Auto.ID,Nick.2),32) == $true) && ($r.set(Auto.ID,Nick.2) != n/a)) { aecho $chr(3) $+ $ts $c(1) $+ < $+ $iif($left($target,1) == @,@) $+ $nick $+ ( $+ $chan $+ ) $+ $c(1) $+ > $visible($1-) }
n109=    elseif (($istok($replace($rpunct($1-),$rpunct($r.set(Auto.ID,Nick.3)),$r.set(Auto.ID,Nick.3)),$r.set(Auto.ID,Nick.3),32) == $true) && ($r.set(Auto.ID,Nick.3) != n/a)) { aecho $chr(3) $+ $ts $c(1) $+ < $+ $iif($left($target,1) == @,@) $+ $nick $+ ( $+ $chan $+ ) $+ $c(1) $+ > $visible($1-) }
n110=    elseif (($istok($replace($rpunct($1-),$rpunct($r.set(Auto.ID,Nick.4)),$r.set(Auto.ID,Nick.4)),$r.set(Auto.ID,Nick.4),32) == $true) && ($r.set(Auto.ID,Nick.4) != n/a)) { aecho $chr(3) $+ $ts $c(1) $+ < $+ $iif($left($target,1) == @,@) $+ $nick $+ ( $+ $chan $+ ) $+ $c(1) $+ > $visible($1-) }
n111=    elseif (($istok($replace($rpunct($1-),$rpunct($r.set(Auto.ID,Nick.5)),$r.set(Auto.ID,Nick.5)),$r.set(Auto.ID,Nick.5),32) == $true) && ($r.set(Auto.ID,Nick.5) != n/a)) { aecho $chr(3) $+ $ts $c(1) $+ < $+ $iif($left($target,1) == @,@) $+ $nick $+ ( $+ $chan $+ ) $+ $c(1) $+ > $visible($1-) }
n112=  }
n113=  if ($me ison $chan) && ($1- != $null) { echo $chan $ts $c(1) $+ < $+ $iif($left($target,1) == @, [ $c(2) $+ @ ] ) $+ $nick $+ $c(1) $+ > $visible($1-) }
n114=  haltdef
n115=}
